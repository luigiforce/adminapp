######
## https://github.com/forcedotcom/sfdx-circleci-org/blob/master/.circleci/config.yml
######

auth: &auth
    run:
      name: Authorize Target Deployment Org
      context: DEV
      command: |
        #Authorize target org
        cd ~/project
        sfdx force:auth:jwt:grant --instanceurl $ENDPOINT --clientid $CONSUMER_KEY --jwtkeyfile jwt/server.key --username $USER_NAME --setalias dev -s

createSFDX: &createSFDX
    run:
      name: "Create SFDX Folder" 
      command: |
        mkdir sfdx

decryptKey: &decryptKey
    run:
      name: Decrypt server key
      command: |
        #Decrypt server key
        openssl enc -nosalt -aes-256-cbc -d -in jwt/server.key.enc -out jwt/server.key -base64 -K $DECRYPTION_KEY -iv $DECRYPTION_IV
      
deploy: &deploy
    run:
      name: Deploy to Target Deployment Org
      command: |
        #Deploy to target deployment org and run unit tests. 
        sfdx force:mdapi:deploy --wait 10 --deploydir $DEPLOYDIR --targetusername UAT --testlevel $TESTLEVEL
      
      #Example shows how to run a check only deploy.
      #sfdx force:mdapi:deploy --checkonly --wait 10 --deploydir $DEPLOYDIR --targetusername UAT --testlevel $TESTLEVEL

build_docker: &build_docker
    working_directory: '~/project'
    docker:
      - image: circleci/node:8.9.4
    environment:
    - DX_CLI_URL: https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz

deploySource: &deploySource
  run:
    name: Deploying project via source api
    command: |
      cd ~/project
      sfdx force:source:deploy -u dev -p force-app/ -w 8

getCLI: &getCLI
    run:
      name: Download CLI
      command: |
        # Download cli
        wget -qO- $DX_CLI_URL | tar xJ -C sfdx --strip-components 1

installCLI: &installCLI
    run:
      name: Install CLI
      command: |
        # Install the cli
        ./sfdx/install
        sfdx

run_local_tests: &run_local_tests 
  run:
    name: Run all local tests
    command: |
      mkdir test
      sfdx force:apex:test:run -l RunLocalTests -r human -c -d test -u dev

deployJob: &deployJob
  <<: *build_docker
  steps:
      - checkout #inbuilt command through Circle to checkout the repo you authd 
      - *createSFDX
      - *getCLI
      - *installCLI
      - *decryptKey
      - *auth
      - *deploySource

version: 2  #specify version 2 to use circle 2.0 config
jobs: 
  set_up_env:
    <<: *build_docker
    steps:
      - checkout #inbuilt command through Circle to checkout the repo you authd 
      - *createSFDX
      - *getCLI
      - *installCLI
      - *decryptKey
      - *auth
      - *run_local_tests

  deployDev: #specify deploy job alias up here so you can set a manual approval step to advance enviornments
    <<: *deployJob
  deployTest:
    <<: *deployJob
  deployBeta:
    <<: *deployJob
  deployProd:
    <<: *deployJob

workflows:
  version: 2 #specify version 2 to use circle 2.0 config
  pipeline:
    jobs:

      - set_up_env
    
      - deployDev:
          requires: [ set_up_env ]
          context: DEV
          filters:
            branches:
              only: master
    
      - approveDev:
          requires: [ deployDev ]
          type: approval

      - deployTest:
          requires: [ approveDev ]
          context: TEST
          filters:
            branches:
              only: master
    
      - approveTest:
          requires: [ deployTest ]
          type: approval
      
      - deployBeta:
          requires: [ approveTest ]
          #context: BETA
          filters:
            branches:
              only: master
    
      - approveBeta:
          requires: [ deployBeta ]
          type: approval
      
      - deployProd:
          requires: [ approveBeta ]
          #context: PROD
          filters:
            branches:
              only: master
      